/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package ELschleifentool.gebäude;

import ELschleifentool.model.MyPlani;
import ELschleifentool.network.Repository;
import java.awt.Color;
import java.awt.Component;
import javax.swing.JTable;
import javax.swing.table.AbstractTableModel;
import javax.swing.table.DefaultTableCellRenderer;

/**
 *
 * @author nico
 */
public class GebäudebauPanel extends javax.swing.JPanel implements GebäudeUserInterface {

    private AbstractTableModel tableModel;
    private GebäudebauTool tool;

    /**
     * Creates new form GebäudebauPanel
     */
    public GebäudebauPanel(String sid) {
        initComponents();
        tableModel = new AbstractTableModel() {
            private final String[] columns = new String[]{"", "Koords", "Stufe", "Aktuell", "Fertigstellung", "kosten für nächste Stufe"};

            @Override
            public int getRowCount() {
                return tool.getPlaniList().size();
            }

            @Override
            public int getColumnCount() {
                return columns.length;
            }

            @Override
            public Object getValueAt(int rowIndex, int columnIndex) {
                MyPlani plani = tool.getPlaniList().get(rowIndex);
                switch (columnIndex) {
                    case 0:
                        return tool.isPlaniSelected(plani);
                    case 1:
                        return plani;
                    case 2:
                        return tool.getStufe(plani);
                    case 3:
                        return tool.getAktuellerBau(plani);
                    case 4:
                        return tool.getFertigstellung(plani);
                    case 5:
                        return tool.getKosten(plani);
                    default:
                        return "";
                }
            }

            @Override
            public Class getColumnClass(int column) {
                switch (column) {
                    case 0:
                        return Boolean.class;
                    case 1:
                        return MyPlani.class;
                    default:
                        return String.class;
                }
            }

            @Override
            public String getColumnName(int column) {
                return columns[column];
            }

            @Override
            public boolean isCellEditable(int row, int col) {
                return col == 0;
            }

            @Override
            public void setValueAt(Object aValue, int rowIndex, int columnIndex) {
                MyPlani plani = tool.getPlaniList().get(rowIndex);
                if (columnIndex == 0) {
                    tool.setPlaniSelected(plani, (boolean) aValue);
                }
                fireTableCellUpdated(rowIndex, columnIndex);// notify listeners
            }
        };

        jTableConstruction.setDefaultRenderer(Object.class, new DefaultTableCellRenderer() {
            @Override
            public Component getTableCellRendererComponent(JTable table, Object value, boolean isSelected, boolean hasFocus, int row, int column) {
                final Component c = super.getTableCellRendererComponent(table, value, isSelected, hasFocus, row, column);
                MyPlani plani = tool.getPlaniList().get(row);
                c.setBackground(Color.decode(tool.getBackgroundColor(plani)));
                return c;
            }
        });

        jTableConstruction.setModel(tableModel);
        jTableConstruction.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);
        jTableConstruction.getColumnModel().getColumn(0).setPreferredWidth(30);
        jTableConstruction.getColumnModel().getColumn(1).setPreferredWidth(110);
        jTableConstruction.getColumnModel().getColumn(2).setPreferredWidth(60);
        jTableConstruction.getColumnModel().getColumn(3).setPreferredWidth(200);
        jTableConstruction.getColumnModel().getColumn(4).setPreferredWidth(200);
        jTableConstruction.getColumnModel().getColumn(5).setPreferredWidth(400);
        tool = new GebäudebauTool(sid, this, new Repository());
    }

    @Override
    public void notifyDataChanged() {
        jTableConstruction.invalidate();
        jTableConstruction.repaint();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane2 = new javax.swing.JScrollPane();
        jTableConstruction = new javax.swing.JTable();
        jComboBox1 = new javax.swing.JComboBox<>();
        btn_build = new javax.swing.JButton();
        btn_reload = new javax.swing.JButton();
        btn_select_all = new javax.swing.JButton();
        btn_select_none = new javax.swing.JButton();

        jTableConstruction.setBackground(new java.awt.Color(0, 0, 0));
        jTableConstruction.setForeground(new java.awt.Color(255, 255, 255));
        jTableConstruction.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Auswahl", "Koords", "Stufe", "Status"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Boolean.class, java.lang.String.class, java.lang.String.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                true, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTableConstruction.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_LAST_COLUMN);
        jTableConstruction.setSelectionForeground(new java.awt.Color(0, 255, 255));
        jTableConstruction.setShowVerticalLines(false);
        jTableConstruction.getTableHeader().setReorderingAllowed(false);
        jScrollPane2.setViewportView(jTableConstruction);
        if (jTableConstruction.getColumnModel().getColumnCount() > 0) {
            jTableConstruction.getColumnModel().getColumn(0).setResizable(false);
            jTableConstruction.getColumnModel().getColumn(0).setPreferredWidth(30);
        }

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Hauptquartier", "Biozelle", "Bunker", "Farm", "Eisenmine", "Titanmine", "Bohrturm", "Chemiefabrik", "Recyclingcenter", "Nahrungssilo", "Eisenspeicher", "Titanspeicher", "Wasserspeicher", "Wasserstoffspeicher", "Universität", "Vergnügungszentrum", "Schiffsfabrik", "Verteidigungsstation", "Flottenkontrollzentrum", "Schildgenerator", "Intergalaktischer Weltraumhafen", "Palast", "Kernforschungszentrum", "Statue des Imperators" }));
        jComboBox1.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jComboBox1ItemStateChanged(evt);
            }
        });

        btn_build.setText("bauen");
        btn_build.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_buildActionPerformed(evt);
            }
        });

        btn_reload.setText("Daten neu laden");
        btn_reload.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_reloadActionPerformed(evt);
            }
        });

        btn_select_all.setText("Alle Planeten auswählen");
        btn_select_all.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_select_allActionPerformed(evt);
            }
        });

        btn_select_none.setText("Keine Planeten auswählen");
        btn_select_none.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_select_noneActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 276, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btn_reload)
                .addContainerGap(462, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btn_select_all)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btn_select_none)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btn_build)
                .addContainerGap())
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 876, Short.MAX_VALUE)
                    .addContainerGap()))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_reload))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 443, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btn_build)
                    .addComponent(btn_select_all)
                    .addComponent(btn_select_none))
                .addContainerGap())
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(33, 33, 33)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 431, Short.MAX_VALUE)
                    .addGap(38, 38, 38)))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jComboBox1ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jComboBox1ItemStateChanged
        tool.gebäudeSelected(evt.getItem().toString());
    }//GEN-LAST:event_jComboBox1ItemStateChanged

    private void btn_buildActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_buildActionPerformed
        tool.startBuild();
    }//GEN-LAST:event_btn_buildActionPerformed

    private void btn_reloadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_reloadActionPerformed
        tool.loadPlaniList();
    }//GEN-LAST:event_btn_reloadActionPerformed

    private void btn_select_allActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_select_allActionPerformed
        tool.selectAll();
    }//GEN-LAST:event_btn_select_allActionPerformed

    private void btn_select_noneActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_select_noneActionPerformed
        tool.clearSelection();
    }//GEN-LAST:event_btn_select_noneActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_build;
    private javax.swing.JButton btn_reload;
    private javax.swing.JButton btn_select_all;
    private javax.swing.JButton btn_select_none;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTableConstruction;
    // End of variables declaration//GEN-END:variables

}
